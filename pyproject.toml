[build-system]
requires = ["poetry-core", "oldest-supported-numpy"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "Lmo-web"
version = "0.0.1"
description = "Visual probability distribution & L-moment playground"
authors = ["Joren Hammudoglu <jhammudoglu@gmail.com>"]
readme = "README.md"
license = "BSD-3-Clause"
homepage = "https://jorenham.github.io/Lmo-web/"
repository = "https://github.com/jorenham/Lmo-web/"

[tool.poetry.urls]
Documentation = "https://jorenham.github.io/Lmo-web/"
"Bug Tracker" = "https://github.com/jorenham/Lmo-web/issues"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
plotly = "^5.24.0"
scipy = "^1.14.1"
Lmo = "^0.14.2"

[tool.poetry.group.dev.dependencies]
pyright = "^1.1.379"
ruff = ">=0.6.4"
codespell = "^2.3.0"


[tool.pyright]
include = ["lmo_web", "typings"]
exclude = [
    "**/__pycache__",
    "**/.ruff_cache",
    ".vscode",
    ".git",
    ".github",
]
stubPath = "typings"
venvPath = "."
venv = ".venv"
pythonVersion = "3.12"
pythonPlatform = "Linux"
typeCheckingMode = "strict"
useLibraryCodeForTypes = true

deprecateTypingAliases = true
disableBytesTypePromotions = true
strictDictionaryInference = true
strictListInference = true
strictSetInference = true

reportImplicitOverride = true
reportImportCycles = true
reportIncompleteStub = true
reportInconsistentConstructor = true
reportInvalidStubStatement = true
reportMatchNotExhaustive = true
reportMissingModuleSource = false
reportMissingTypeArgument = true
reportMissingTypeStubs = false
reportPropertyTypeMismatch = true
reportShadowedImports = true
reportTypeCommentUsage = true
reportUninitializedInstanceVariable = true
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportUnnecessaryContains = true
reportUnnecessaryIsInstance = true
reportUnnecessaryTypeIgnoreComment = true
reportUntypedBaseClass = true
reportUntypedClassDecorator = true
reportUntypedFunctionDecorator = true
reportUntypedNamedTuple = true
reportUnusedClass = true
reportUnusedCoroutine = true
reportUnusedExpression = true
reportUnusedFunction = true
reportUnusedVariable = true


[tool.ruff]
src = [
    "main.py",
    "lmo_web",
    "typings"
]
target-version = "py312"
line-length = 79
indent-width = 4
show-fixes = true
force-exclude = true
extend-exclude = [
    ".cache",
    ".github",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
]

[tool.ruff.lint]
ignore-init-module-imports = true
preview = true
select = [
    "F",        # pyflakes
    "E",        # pycodestyle error
    "W",        # pycodestyle warning
    "I",        # isort
    "N",        # pep8-naming
    # "D",        # pydocstyle
    "UP",       # pyupgrade
    "YTT",      # flake8-2020
    "ASYNC",    # flake8-async
    "S",        # flake8-bandit
    "BLE",      # flake8-blind-except
    "B",        # flake8-bugbear
    "A",        # flake8-builtins
    "COM",      # flake8-commas
    "C4",       # flake8-comprehensions
    "DTZ",      # flake8-datetimez
    "T10",      # flake8-debugger
    "EXE",      # flake8-executable
    "FA",       # flake8-future-annotations
    "ISC",      # flake8-implicit-str-concat
    "ICN",      # flake8-import-conventions
    "LOG",      # flake8-logging
    "G",        # flake8-logging-format
    "INP",      # flake8-no-pep420
    "PIE",      # flake8-pie
    "T20",      # flake8-print
    "PYI",      # flake8-pyi
    "PT",       # flake8-pytest-style
    "Q",        # flake8-quotes
    "RSE",      # flake8-raise
    "RET",      # flake8-return
    "SLF",      # flake8-self
    "SLOT",     # flake8-slots
    "SIM",      # flake8-simplify
    "TID",      # flake8-tidy-imports
    "TCH",      # flake8-type-checking
    "ARG",      # flake8-unused-arguments
    "PTH",      # flake8-use-pathlib
    "PD",       # pandas-vet
    "PGH",      # pygrep-hooks
    "PL",       # pylint
    "TRY",      # tryceratops
    "FLY",      # flynt
    "NPY",      # numpy
    "PERF",     # perflint,
    "FURB",     # refurb
    "RUF",      # ruff
]
extend-ignore = [
    # flake8-annotations
    "ANN001",   # missing-type-function-argument (deprecated)
    "ANN002",   # missing-type-args (deprecated)

    # flake8-bandit
    "S101",     # assert

    # flake8-unused-arguments
    "ARG001",   # unused-function-argument
    "ARG002",   # unused-method-argument

    # pandas-vet
    "PD010",    # pandas-use-of-dot-pivot-or-unstack
    "PD013",    # pandas-use-of-dot-stack

    # pylint
    "PLW1641",  # eq-without-hash (buggy; doesn't consider super)
    "PLR2004",  # magic-value-comparison

    # tryceratops
    "TRY003",   # raise-vanilla-args
]
typing-modules = [
    "lmo.typing",
    "numpy.typing",
    "typing",
    "typing_extensions",
]

[tool.ruff.lint.per-file-ignores]
"typings/*" = [
    "PLR0913",  # pylint: too-many-arguments
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.isort]
case-sensitive = true
combine-as-imports = true
force-wrap-aliases = true
known-first-party = ["lmo_web"]
known-third-party = [
    "js",
    "pyodide",
    "pyscript",
    "pyweb",
    "plotly",
    "numpy",
    "scipy",
    "lmo",
]


[tool.codespell]
context = 2
