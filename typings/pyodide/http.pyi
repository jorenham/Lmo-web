from io import StringIO
from typing import Any

from .ffi import JsBuffer, JsFetchResponse

__all__ = 'FetchResponse', 'open_url', 'pyfetch'

def open_url(url: str) -> StringIO: ...

class FetchResponse:
    def __init__(self, url: str, js_response: JsFetchResponse) -> None: ...

    @property
    def body_used(self) -> bool: ...
    @property
    def headers(self) -> dict[str, str]: ...
    @property
    def ok(self) -> bool: ...
    @property
    def redirected(self) -> bool: ...
    @property
    def status(self) -> int: ...
    @property
    def status_text(self) -> str: ...
    @property
    def type(self) -> str: ...
    @property
    def url(self) -> str: ...

    def raise_for_status(self) -> None: ...
    def clone(self) -> FetchResponse: ...
    async def buffer(self) -> JsBuffer: ...
    async def text(self) -> str: ...
    async def string(self) -> str: ...
    async def json(self, **kwargs: Any) -> Any: ...
    async def memoryview(self) -> memoryview: ...
    async def bytes(self) -> bytes: ...
    async def unpack_archive(
        self,
        *,
        extract_dir: str | None = ...,
        format: str | None = ...,  # noqa: A002
    ) -> None: ...

async def pyfetch(url: str, **kwargs: Any) -> FetchResponse: ...
